{"version":3,"sources":["login.png","serviceWorker.js","components/map/MapControls.jsx","components/map/Map.js","components/login/login.jsx","components/login/register.jsx","stores/UserStore.js","config/FireBase.js","components/LoginApp/LoginApp.jsx","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","MapControls","props","handleStyleClick","event","changeStyle","handleTypeClick","state","styles","key","name","link","types","className","this","map","layer","idx","onClick","type","Component","Map","handleStyleBtnClick","styleID","setState","style","swapStyle","lat","lng","zoom","activeType","mapboxgl","accessToken","container","mapContainer","center","on","a","addSource","addLayer","currentStyle","getStyle","json","newStyle","sources","Object","assign","labelIndex","layers","findIndex","el","id","appLayers","filter","source","reverse","forEach","splice","setStyle","Layers","Types","changeType","handleTypeBtnClick","ref","React","Login","containerRef","placeholder","value","usernameValue","onChange","e","onChangeUsername","target","passwordValue","f","onChangePassword","disabled","BtnDisable","Register","extendObservable","loading","isLoggedIn","username","fireB","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","LoginApp","password","buttonDisabled","property","val","trim","auth","signInWithEmailAndPassword","then","u","catch","error","console","log","resetForm","alert","rightSide","classList","add","isLogginActive","remove","prevState","current","currentActive","src","loginImg","setInputValue","doLogin","doSignup","changeState","bind","RightSide","App","isUserLoggedIn","authListener","onAuthStateChanged","user","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.33a7ee80.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login.ba305fec.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {Component} from 'react';\nimport './mapControls.scss';\n\nclass MapControls extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state={\n            styles: [\n                    {key: 1, name: 'Dark', link: 'dark-v10'}, \n                    {key: 2, name: 'Satellite', link: 'satellite-v9'},\n                    {key: 3, name: 'Outdoors',link: 'outdoors-v11'},\n                    {key: 4, name: 'Light', link: 'light-v10'},\n                    {key: 5, name: 'Streets', link: 'streets-v11'}],\n    \n            types: [{name: 'all', link: 'mapbox://styles/mapbox/all'},\n                    {name: 'Flora', link: 'mapbox://styles/mapbox/Flora'}, \n                    {name: 'Fauna', link: 'mapbox://styles/mapbox/Fauna'},\n                    {name: 'Disturbances',link: 'mapbox://styles/mapbox/Disturbances'}],  \n        }\n    }  \n\n    handleStyleClick = (event) => {\n        this.props.changeStyle(event)\n    }\n\n    handleTypeClick = (event) => {\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"dropdown\">\n                    <button className=\"dropbtn\">Styles</button>\n                    <div className=\"dropdown-content\">\n                        {this.state.styles.map( (layer, key, idx) => {\n                            return <p key={key} name={layer.link} onClick={ () => this.handleStyleClick(layer) }>{layer.name}</p>\n                        })}\n                    </div>\n                </div>\n\n                <div className=\"dropdown\">\n                    <button className=\"dropbtn\">Type</button>\n                    <div className=\"dropdown-content\">\n                        {this.state.types.map( (type, key, idx) => {\n                            return <p key={key} name={type.link} onClick={ () => this.handleTypeClick(type) }>{type.name}</p>\n                        })}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default MapControls;","import React from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport './site.scss';\nimport './MapControls';\nimport MapControls from './MapControls';\nimport '../map/mapControls.scss';\nimport { json } from 'd3-request';\n\n\n\n\nclass Map extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            lat: 26.4499,\n            lng: 80.3319,\n            zoom: 6,\n            style: 'mapbox://styles/mapbox/light-v10',\n            activeType: 'all',   \n        }\n    };\n\n    componentDidMount() {\n        mapboxgl.accessToken = 'pk.eyJ1IjoiZGV2NTk2IiwiYSI6ImNrOHJsaHY5cDAzcGQzbHBqc21vaWsxcnMifQ.B5rBbh4fDvTHEqQHrGU_Bg';\n        const {lat, lng, zoom, style, activeType} = this.state\n        this.map = new mapboxgl.Map({\n            container: this.mapContainer,\n            style: style,\n            center: [lng, lat],\n            zoom: zoom\n            });\n\n        this.map.on('load', async () => {\n          this.map.addSource('earthquakes', {  'type': 'geojson',\n                                          'data':\n                                          'https://raw.githubusercontent.com/Devansh-S/shapefiles/master/state_ut/jj.geojson'\n                                      }\n                      );\n  \n          this.map.addLayer({\n                          'id': 'earthquakes',\n                          'type': 'line',\n                          'source': 'earthquakes',\n                          'layout': {\n                                      'line-join': 'round',\n                                      'line-cap': 'round'\n                                  },\n                          'paint': {\n                                      'line-color': 'rgb(255,128,0)',\n                                      'line-width': 2\n                                  }\n                      }\n                  )\n          });\n    }\n\n    swapStyle(styleID) {\n      var currentStyle = this.map.getStyle();\n      json(`https://api.mapbox.com/styles/v1/mapbox/${styleID}?access_token=${mapboxgl.accessToken}`, (newStyle) => {\n        newStyle.sources = Object.assign({}, currentStyle.sources, newStyle.sources); // ensure any sources from the current style are copied across to the new style\n        var labelIndex = newStyle.layers.findIndex((el) => { // find the index of where to insert our layers to retain in the new style\n          return el.id === 'waterway-label';\n        });\n        var appLayers = currentStyle.layers.filter((el) => { // app layers are the layers to retain, and these are any layers which have a different source set\n          return (el.source && el.source !== \"mapbox://mapbox.satellite\" && el.source !== \"composite\");\n        });\n        appLayers.reverse(); // reverse to retain the correct layer order\n        appLayers.forEach((layer) => {\n          newStyle.layers.splice(labelIndex, 0, layer); // inset these layers to retain into the new style\n        });\n        this.map.setStyle(newStyle); // now setStyle\n      });\n    }\n\n    handleStyleBtnClick = event => {\n\n      let styleID = event.link;\n      this.setState({style: styleID})\n      this.swapStyle(styleID)\n    }\n\n    render() {\n        return (\n            <div>\n                <MapControls Layers={this.state.styles} Types={this.state.types} changeStyle={this.handleStyleBtnClick} changeType={this.handleTypeBtnClick}/>\n                <div ref={el => this.mapContainer = el} className='mapContainer' />\n            </div>\n        )\n    }\n};\n\nexport default Map;","import React from \"react\";\n\nexport class Login extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"base-container\" ref={this.props.containerRef}>\n        <div className=\"header\">Login</div>\n        <div className=\"content\">\n          <div className=\"form\">\n            <div className=\"form-group\">\n              <input type=\"text\" name=\"username\" placeholder=\"username\" value={ this.props.usernameValue } onChange={ (e) => this.props.onChangeUsername(e.target.value)} />\n            </div>\n            <div className=\"form-group\">\n              <input type=\"password\" name=\"password\" placeholder=\"password\" value={ this.props.passwordValue } onChange={ (f) => this.props.onChangePassword(f.target.value)}/>\n            </div>\n          </div>\n          <button type=\"button\" className=\"btn\" onClick={ (e) => this.props.onClick(e)} disabled={this.props.BtnDisable}>\n            Login\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;","import React from \"react\";\n\nexport class Register extends React.Component {\n\n  render() {\n    return (\n      <div className=\"base-container\" ref={this.props.containerRef}>\n        <div className=\"header\">Register</div>\n        <div className=\"content\">\n          <div className=\"form\">\n            <div className=\"form-group\">\n              <input type=\"text\" name=\"username\" placeholder=\"username\"/>\n            </div>\n            <div className=\"form-group\">\n              <input type=\"text\" name=\"email\" placeholder=\"email\" value={ this.props.usernameValue } onChange={ (e) => this.props.onChangeUsername(e.target.value)}/>\n            </div>\n            <div className=\"form-group\">\n              <input type=\"text\" name=\"password\" placeholder=\"password\" value={ this.props.passwordValue } onChange={ (f) => this.props.onChangePassword(f.target.value)}/>\n            </div>\n          </div>\n          <button type=\"button\" className=\"btn\" onClick={ (e) => this.props.onClick(e)} disabled={this.props.BtnDisable} >\n            Register\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Register;","import { extendObservable } from 'mobx';\n\n/* USER STORE */\n\nclass UserStore {\n    constructor() {\n        extendObservable(this, {\n\n            loading: true,\n            isLoggedIn: false,\n            username: ''\n        })\n    }\n}\n\nexport default new UserStore();","import firebase from 'firebase';\n\nconst config = {\n    apiKey: \"AIzaSyBtXnFAj2YBJnxXbXvtAt3h3bcblS1KUaE\",\n    authDomain: \"gtfapp-eb372.firebaseapp.com\",\n    databaseURL: \"https://gtfapp-eb372.firebaseio.com\",\n    projectId: \"gtfapp-eb372\",\n    storageBucket: \"gtfapp-eb372.appspot.com\",\n    messagingSenderId: \"961355962531\",\n    appId: \"1:961355962531:web:31520bc4120f103f1d8716\",\n    measurementId: \"G-PVZ0QY8L1K\"\n};\nconst fireB = firebase.initializeApp(config);\nexport default fireB;","import React from \"react\";\nimport \"./LoginApp.scss\";\nimport \"../login/style.scss\";\nimport Login from '../login/login';\nimport Register from \"../login/register\";\nimport loginImg from \"../../login.png\";\nimport UserStore from '../../stores/UserStore'\nimport fireB from '../../config/FireBase';\n\n\nclass LoginApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      buttonDisabled: false\n    }\n  }\n  \n  setInputValue(property, val){\n      val = val.trim()\n      this.setState({\n        [property]: val\n      })\n  }\n\n  resetForm() {\n    this.setState({\n      username: '',\n      password: '',\n      buttonDisabled: false\n    })\n  }\n\n  async doLogin(e) {\n    if (!this.state.username){\n      return;\n    }\n    if (!this.state.password){\n      return;\n    }\n\n    this.setState ({buttonDisabled: true})\n\n    try {\n      fireB.auth().signInWithEmailAndPassword( this.state.username, this.state.password ).then((u) => {}).catch((error) => {console.log(error)})\n    }\n\n    catch(e) {\n      console.log(e);\n      this.resetForm();\n    }\n  }\n\n  async doSignup(e) {\n    if (!this.state.username){\n      return;\n    }\n    if (!this.state.password){\n      return;\n    }\n\n    this.setState ({buttonDisabled: true})\n\n    try {\n      alert('SignUp is Disabled! Please Login using given credentials')\n      //fireB.auth().createUserWithEmailAndPassword( this.state.username, this.state.password ).then((u) => {}).then((u) => {console.log(u)}).catch((error) => {console.log(error)})\n    }\n\n    catch(e) {\n      console.log(e);\n      this.resetForm();\n    }\n  }\n\n\n  componentDidMount() {\n    this.rightSide.classList.add(\"right\");\n  }\n\n  changeState() {\n    const { isLogginActive } = this.state;\n\n    if (isLogginActive) {\n      this.rightSide.classList.remove(\"right\");\n      this.rightSide.classList.add(\"left\");\n    } else {\n      this.rightSide.classList.remove(\"left\");\n      this.rightSide.classList.add(\"right\");\n    }\n    this.setState(prevState => ({ isLogginActive: !prevState.isLogginActive }));\n  }\n\n\n  render() {\n    const { isLogginActive } = this.state;\n    const current = isLogginActive ? \"Register\" : \"Login\";\n    const currentActive = isLogginActive ? \"login\" : \"register\";\n    return (\n      <div className=\"LoginApp\">\n        <div className=\"login\">\n          <div className='mainContainer'>\n            <img src={loginImg}/>\n            <div className=\"container\" ref={ref => (this.container = ref)}>\n              <div className='inner-box'>\n              </div>\n                {isLogginActive && (\n                  <Login \n                  containerRef={ref => (this.current = ref)}\n                  usernameValue={ this.state.username ? this.state.username: ''}\n                  onChangeUsername={ (val) => this.setInputValue('username', val)}\n                  passwordValue={ this.state.password ? this.state.password: ''}\n                  onChangePassword={ (val) => this.setInputValue('password', val)}\n                  onClick={ (e)=> this.doLogin(e) }\n                  BtnDisable={this.buttonDisabled}\n                  />\n                )}\n                {!isLogginActive && (\n                  <Register \n                  containerRef={ref => (this.current = ref)}\n                  usernameValue={ this.state.username ? this.state.username: ''}\n                  onChangeUsername={ (val) => this.setInputValue('username', val)}\n                  passwordValue={ this.state.password ? this.state.password: ''}\n                  onChangePassword={ (val) => this.setInputValue('password', val)}\n                  onClick={ (e)=> this.doSignup(e) }\n                  BtnDisable={this.buttonDisabled}\n                  />\n                )}\n                <RightSide\n                current={current}\n                currentActive={currentActive}\n                containerRef={ref => (this.rightSide = ref)}\n                onClick={this.changeState.bind(this)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst RightSide = props => {\n  return (\n    <div\n      className=\"right-side\"\n      ref={props.containerRef}\n      onClick={props.onClick}\n    >\n      <div className=\"inner-container\">\n        <div className=\"text\">{props.current}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginApp;","import React from \"react\";\nimport \"./App.scss\";\nimport Map from \"./components/map/Map\";\nimport LoginApp from './components/LoginApp/LoginApp';\nimport fireB from \"./config/FireBase\";\n/*import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";*/\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogginActive: true,\n      isUserLoggedIn: {},\n    };\n  }\n\n\ncomponentDidMount() {\n  this.authListener()\n}\n  \nauthListener() {\n  fireB.auth().onAuthStateChanged((user) => {\n    console.log(user);\n    if (user) {\n      this.setState({isUserLoggedIn: user})\n    } else {\n      this.setState({isUserLoggedIn: null})\n    }\n  })\n}\n\n  render() {\n    return (\n        <div>\n          {this.state.isUserLoggedIn ? (<Map />) : (<LoginApp />) }\n        </div>\n    ) \n  }\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport mapboxgl from 'mapbox-gl';\n\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiZGV2NTk2IiwiYSI6ImNrOHJsaHY5cDAzcGQzbHBqc21vaWsxcnMifQ.B5rBbh4fDvTHEqQHrGU_Bg';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}